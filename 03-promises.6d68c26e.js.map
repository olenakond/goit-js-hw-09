{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAeC,SAASC,cAAc,uBACtCC,EAAcF,SAASC,cAAc,sBACrCE,EAAgBH,SAASC,cAAc,wBAK7C,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAbYN,SAASC,cAAc,UAE/BY,iBAAiB,SAe5B,SAAoBC,GAClBA,EAAMC,iBAEN,SAAwBT,EAAOU,EAAMC,GAEnC,IADA,IAAIC,EAAiBZ,EACZa,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCf,EAAce,EAAGD,GACdE,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUiB,EAAKD,EAALf,MACjBiB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANJ,EAAM,M,IAGjDK,OAAM,SAAAN,G,IAAGhB,EAAQgB,EAARhB,SAAUiB,EAAKD,EAALf,MAClBiB,EAAA1B,GAAS2B,OAAOI,QACd,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAANJ,EAAM,M,IAGjDJ,GAAkBF,C,CAGtBa,CACEC,OAAO/B,EAAagC,OACpBD,OAAO5B,EAAY6B,OACnBD,OAAO3B,EAAc4B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayElement = document.querySelector('input[name=\"delay\"]');\nconst stepElement = document.querySelector('input[name=\"step\"]');\nconst amountElement = document.querySelector('input[name=\"amount\"]');\nconst btnElement = document.querySelector('button');\n\nbtnElement.addEventListener('click', onClickBtn);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onClickBtn(event) {\n  event.preventDefault();\n\n  function createPromises(delay, step, amount) {\n    let delayOfPromise = delay;\n    for (let i = 1; i <= amount; i += 1) {\n      createPromise(i, delayOfPromise)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n      delayOfPromise += step;\n    }\n  }\n  createPromises(\n    Number(delayElement.value),\n    Number(stepElement.value),\n    Number(amountElement.value)\n  );\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delayElement","document","querySelector","$ce04d3a99e08e73b$var$stepElement","$ce04d3a99e08e73b$var$amountElement","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","step","amount","delayOfPromise","i","then","param","_$delay","$parcel$interopDefault","Notify","success","concat","catch","failure","createPromises","Number","value"],"version":3,"file":"03-promises.6d68c26e.js.map"}